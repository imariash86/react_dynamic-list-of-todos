{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","React","memo","todos","openModal","selectedTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","filterTodos","query","changeQuery","resetQuery","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","fetchData","a","userId","data","href","email","name","App","setTodos","setSelectedTodo","filterBy","setFilterBy","setQuery","useCallback","selection","visibleTodos","filter","toLocaleLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ba37df4.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  openModal: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n  openModal,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': selectedTodo,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => openModal(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': !selectedTodo,\n                    'fa-eye-slash': selectedTodo,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n      </tbody>\n    </table>\n  );\n});\n","import React from 'react';\n\ninterface Props {\n  filterTodos: (selection: string) => void,\n  query: string,\n  changeQuery: (value: string) => void,\n  resetQuery: () => void,\n}\n\nexport const TodoFilter: React.FC<Props> = React.memo(({\n  filterTodos,\n  query,\n  changeQuery,\n  resetQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => filterTodos(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => changeQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={resetQuery}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n));\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = React.memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedTodo: Todo;\n  openModal: (todo: null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = React.memo(({\n  selectedTodo,\n  openModal,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getUser(selectedTodo.userId);\n\n      setUser(data);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => openModal(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useCallback } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getTodos();\n\n      setTodos(data);\n    };\n\n    fetchData();\n  }, []);\n\n  const openModal = useCallback((todo: Todo | null) => {\n    setSelectedTodo(todo);\n  }, []);\n\n  const filterTodos = useCallback((selection: string) => {\n    setFilterBy(selection);\n  }, []);\n\n  const changeQuery = useCallback((value: string) => {\n    setQuery(value);\n  }, []);\n\n  const resetQuery = useCallback(() => {\n    setQuery('');\n  }, []);\n\n  let visibleTodos = todos.filter(todo => {\n    switch (filterBy) {\n      case 'all':\n      default:\n        return [];\n      case 'active':\n        return todo.completed === false;\n      case 'completed':\n        return todo.completed === true;\n    }\n  });\n\n  if (query) {\n    visibleTodos = [...visibleTodos].filter(todo => todo.title.toLocaleLowerCase().includes(query.toLocaleLowerCase()));\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterTodos={filterTodos}\n                query={query}\n                changeQuery={changeQuery}\n                resetQuery={resetQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? (\n                  <Loader />\n                )\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    openModal={openModal}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal selectedTodo={selectedTodo} openModal={openModal} />}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}